# --- T2-COPYRIGHT-BEGIN ---
# t2/package/*/xf86-video-opentegra/hotfix-api.patch
# Copyright (C) 2025 The T2 SDE Project
# SPDX-License-Identifier: GPL-2.0 or patched project license
# --- T2-COPYRIGHT-END ---

--- xf86-video-opentegra-0.7.0/src/driver.c.vanilla	2025-07-12 13:01:03.308270923 +0200
+++ xf86-video-opentegra-0.7.0/src/driver.c	2025-07-12 13:10:01.352958218 +0200
@@ -548,7 +548,7 @@
         FatalError("Couldn't adjust screen pixmap\n");
 
     if (tegra->drmmode.shadow_enable) {
-        if (!shadowAdd(pScreen, rootPixmap, shadowUpdatePackedWeak(),
+        if (!shadowAdd(pScreen, rootPixmap, shadowUpdatePacked,
                        TegraShadowWindow, 0, 0))
             return FALSE;
     }
--- xf86-video-opentegra-0.7.0/src/compat-api.h.vanilla	2025-07-12 12:58:17.478060778 +0200
+++ xf86-video-opentegra-0.7.0/src/compat-api.h	2025-07-12 12:59:09.384266487 +0200
@@ -28,9 +28,6 @@
 #ifndef COMPAT_API_H
 #define COMPAT_API_H
 
-#include <xorg/glyphstr.h>
-#include <xorg/xf86.h>
-
 #ifndef GLYPH_HAS_GLYPH_PICTURE_ACCESSOR
 #define GetGlyphPicture(g, s) GlyphPicture((g))[(s)->myNum]
 #define SetGlyphPicture(g, s, p) GlyphPicture((g))[(s)->myNum] = p
@@ -49,24 +46,29 @@
 #define SCREEN_ARG_TYPE int
 #define SCREEN_PTR(arg1) ScreenPtr pScreen = screenInfo.screens[(arg1)]
 
-#define SCREEN_INIT_ARGS_DECL int i, ScreenPtr pScreen, int argc, char **argv
+#define SCREEN_INIT_ARGS_DECL int scrnIndex, ScreenPtr pScreen, int argc, char **argv
 
 #define BLOCKHANDLER_ARGS_DECL int arg, pointer blockData, pointer pTimeout, pointer pReadmask
 #define BLOCKHANDLER_ARGS arg, blockData, pTimeout, pReadmask
 
+#define WAKEUPHANDLER_ARGS_DECL int arg, pointer wakeupData, unsigned long result, pointer read_mask
+#define WAKEUPHANDLER_ARGS arg, wakeupData, result, read_mask
+
 #define CLOSE_SCREEN_ARGS_DECL int scrnIndex, ScreenPtr pScreen
 #define CLOSE_SCREEN_ARGS scrnIndex, pScreen
 
 #define ADJUST_FRAME_ARGS_DECL int arg, int x, int y, int flags
+#define ADJUST_FRAME_ARGS(arg, x, y) (arg)->scrnIndex, x, y, 0
 
 #define SWITCH_MODE_ARGS_DECL int arg, DisplayModePtr mode, int flags
+#define SWITCH_MODE_ARGS(arg, m) (arg)->scrnIndex, m, 0
 
 #define FREE_SCREEN_ARGS_DECL int arg, int flags
 
 #define VT_FUNC_ARGS_DECL int arg, int flags
 #define VT_FUNC_ARGS pScrn->scrnIndex, 0
 
-#define XF86_ENABLEDISABLEFB_ARG(x) ((x)->scrnIndex)
+#define XF86_SCRN_ARG(x) ((x)->scrnIndex)
 #else
 #define SCRN_ARG_TYPE ScrnInfoPtr
 #define SCRN_INFO_PTR(arg1) ScrnInfoPtr pScrn = (arg1)
@@ -76,21 +78,35 @@
 
 #define SCREEN_INIT_ARGS_DECL ScreenPtr pScreen, int argc, char **argv
 
+#if ABI_VIDEODRV_VERSION >= SET_ABI_VERSION(23, 0)
+#define BLOCKHANDLER_ARGS_DECL ScreenPtr arg, pointer pTimeout
+#define BLOCKHANDLER_ARGS arg, pTimeout
+
+#define WAKEUPHANDLER_ARGS_DECL ScreenPtr arg, unsigned long result
+#define WAKEUPHANDLER_ARGS arg, result
+#else
 #define BLOCKHANDLER_ARGS_DECL ScreenPtr arg, pointer pTimeout, pointer pReadmask
 #define BLOCKHANDLER_ARGS arg, pTimeout, pReadmask
 
+#define WAKEUPHANDLER_ARGS_DECL ScreenPtr arg, unsigned long result, pointer read_mask
+#define WAKEUPHANDLER_ARGS arg, result, read_mask
+#endif
+
 #define CLOSE_SCREEN_ARGS_DECL ScreenPtr pScreen
 #define CLOSE_SCREEN_ARGS pScreen
 
 #define ADJUST_FRAME_ARGS_DECL ScrnInfoPtr arg, int x, int y
+#define ADJUST_FRAME_ARGS(arg, x, y) arg, x, y
+
 #define SWITCH_MODE_ARGS_DECL ScrnInfoPtr arg, DisplayModePtr mode
+#define SWITCH_MODE_ARGS(arg, m) arg, m
 
 #define FREE_SCREEN_ARGS_DECL ScrnInfoPtr arg
 
 #define VT_FUNC_ARGS_DECL ScrnInfoPtr arg
 #define VT_FUNC_ARGS pScrn
 
-#define XF86_ENABLEDISABLEFB_ARG(x) (x)
+#define XF86_SCRN_ARG(x) (x)
 
 #endif
 
