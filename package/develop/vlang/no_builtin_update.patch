# --- T2-COPYRIGHT-BEGIN ---
# t2/package/*/vlang/no_builtin_update.patch
# Copyright (C) 2025 The T2 SDE Project
# SPDX-License-Identifier: GPL-2.0 or patched project license
# --- T2-COPYRIGHT-END ---

diff --git a/cmd/v/v.v b/cmd/v/v.v
index b319955bc..eb22e6f1a 100644
--- a/cmd/v/v.v
+++ b/cmd/v/v.v
@@ -34,12 +34,10 @@ const external_tools = [
 	'repl',
 	'repeat',
 	'retry',
-	'self',
 	'setup-freetype',
 	'shader',
 	'share',
 	'should-compile-all',
-	'symlink',
 	'scan',
 	'test',
 	'test-all', // runs most of the tests and other checking tools, that will be run by the CI
@@ -49,7 +47,6 @@ const external_tools = [
 	'test-self',
 	'time',
 	'tracev',
-	'up',
 	'vet',
 	'wipe-cache',
 	'watch',
diff --git a/vlib/v/help/default.txt b/vlib/v/help/default.txt
index 7b026320f..eafc11004 100644
--- a/vlib/v/help/default.txt
+++ b/vlib/v/help/default.txt
@@ -10,14 +10,14 @@ Examples:
                                executable immediately after compilation.
   v -g run hello.v             Same as above but makes debugging easier
                                (Useful in case your program crashes).
-                               (see `v help build` and `v help build-c` 
+                               (see `v help build` and `v help build-c`
                                for more information)
   v crun hello.v               Same as above but do not recompile if the
                                executable already exists and is newer than the
                                sources.
   v -o h.c hello.v             Translate `hello.v` to `h.c` only. Do not compile
                                further.
-  v -o - hello.v               Translates `hello.v` and outputs the C source 
+  v -o - hello.v               Translates `hello.v` and outputs the C source
                                code to stdout. Does not compile further.
   v watch hello.v              Re-do the same compilation when a source code
                                change is detected. The compiled result does not
@@ -57,10 +57,6 @@ V supports the following commands:
                                declarations.
 
 * Installation Management Utilities:
-  symlink                      Create a symbolic link for V.
-  up                           Run the V self-updater.
-  self [-prod]                 Run the V self-compiler, use -prod to optimize
-                               compilation.
   version                      Print the version text and exits.
 
 * Package Management Utilities:
diff --git a/vlib/v/pref/pref.v b/vlib/v/pref/pref.v
index 4a441b625..3b15169ca 100644
--- a/vlib/v/pref/pref.v
+++ b/vlib/v/pref/pref.v
@@ -339,6 +339,15 @@ pub fn parse_args_and_show_errors(known_external_commands []string, args []strin
 	} */
 	mut no_skip_unused := false
 
+	$if tools_vflags ? {
+		flag := $d('tools_vflags', '')
+		for def in flag.split(' ') {
+			res.parse_define(def)
+		}
+	} $else {
+		$compile_warn("no tools_vflags set")
+	}
+
 	mut command, mut command_idx := '', 0
 	for i := 0; i < args.len; i++ {
 		arg := args[i]
