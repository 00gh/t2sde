# --- T2-COPYRIGHT-BEGIN ---
# t2/package/*/subversion/subversion.conf
# Copyright (C) 2004 - 2025 The T2 SDE Project
# Copyright (C) 1998 - 2003 ROCK Linux Project
# SPDX-License-Identifier: GPL-2.0
# --- T2-COPYRIGHT-END ---

# use the apache prefix
# . $base/package/*/apache/apache.conf

if [ $prefix_auto = 1 ]; then
	prefix="usr"
	set_confopt
fi

# APR is mandatory, so no additional test needed.
#
pkgprefix -t apr
var_append confopt ' ' "--with-apr=$root/$(pkgprefix apr)"
pkgprefix -t apr-util
var_append confopt ' ' "--with-apr-util=$root/$(pkgprefix apr-util)"

# all this is to build the apache server-side module and if so, no modification
# to httpd.conf are done ...
#
if pkginstalled apache; then
	var_append confopt ' ' "--with-apxs=$root/$(pkgprefix bindir apache)/apxs"
	var_append confopt ' ' --disable-mod-activation
fi

if pkginstalled bdb; then
	var_append confopt ' ' --with-berkeley-db
else
	var_append confopt ' ' --without-berkeley-db
fi

# build and install perl bindings
svn_inst_pl() {
	make swig-pl
	make install-swig-pl
}

# build and install python bindings
svn_inst_py() {
#	PYTHON_SITE=`python -c "import os,sys; print os.path.join(sys.prefix, 'lib','python'+sys.version[:3],'site-packages')"`
	make swig-py
	make install-swig-py #\
#		swig_pydir=$PYTHON_SITE/svn/libsvn \
#		swig_pydir_extra=$PYTHON_SITE/svn
}

# build and install ruby bindings
svn_inst_rb() {
	make swig-rb
	make install-swig-rb
}

hook_add postmake 4 "cp -vrf tools $root$docdir"

# we need svn-config for anjuta
#hook_add premake 3 "sed -i 's/@SVN_DB_[^@]*@//g' svn-config"
#hook_add postmake 5 "cp -vf svn-config $bindir"

# if swig is present build and install the perl and python bindings
# TODO: fix for cross build
if pkginstalled swig && atstage "native"; then
	pkginstalled perl && hook_add postmake 5 "svn_inst_pl"
	pkginstalled python && hook_add postmake 5 "svn_inst_py"
	pkginstalled ruby && hook_add postmake 5 "svn_inst_rb"
else
	var_append confopt ' ' --without-swig
fi

pkginstalled lz4 || var_append confopt ' ' --with-lz4=internal

# use system wide serf
if pkginstalled serf; then
	pkgprefix -t serf
	var_append confopt ' ' "--with-serf=$root/$(pkgprefix serf)"
fi

var_append confopt ' ' --enable-plaintext-password-storage
pkginstalled gnome-keyring || var_append confopt ' ' --without-gnome-keyring

atstage cross && var_insert GCC_WRAPPER_INSERT ' ' -L$root$libdir
[[ $libdir != *lib ]] && hook_add premake 3 "sed -i 's/usr\/lib /usr\/${libdir##*/} /' Makefile"

export CPPFLAGS; var_append CPPFLAGS ' ' '-P' # failed to recognize APR_INT64_T_FMT on this platform
var_append makeinstopt ' ' -j1
