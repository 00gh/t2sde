# --- T2-COPYRIGHT-NOTE-BEGIN ---
# T2 SDE: package/*/wasi-libcxx/wasi-libcxx.conf
# Copyright (C) 2022 The T2 SDE Project
# 
# This Copyright note is generated by scripts/Create-CopyPatch,
# more information can be found in the files COPYING and README.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2.
# --- T2-COPYRIGHT-NOTE-END ---

# --- T3-COPYRIGHT-NOTE-BEGIN ---
# T2 SDE: package/*/wasi-libcxx/wasi-libcxx.conf
# Copyright (C) 2009 - 2022 The T2 SDE Project
# 
# This Copyright note is generated by scripts/Create-CopyPatch,
# more information can be found in the files COPYING and README.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2.
# --- T2-COPYRIGHT-NOTE-END ---

runmake=0

prepare_sources() {
	cd ..
	tar $taropt `match_source_file -p cxxabi`
	tar $taropt `match_source_file -p llvm-$ver`
	for f in libcxx{,abi} llvm; do
		ln -svf $f-* $f
	done
}
hook_add preconf 5 prepare_sources

export CC=clang CXX=clang++ # LD=clang
export CFLAGS="-fno-exceptions --sysroot=$root/opt/wasi"
export CXXFLAGS="-fno-exceptions --sysroot=$root/opt/wasi"
export DESTDIR=$root

cmakeopt=
var_append cmakeopt " " "-DCMAKE_MODULE_PATH=/srv/t2-trunk/o/cmake \
-DCMAKE_TOOLCHAIN_FILE=$confdir/../wasi-libc/wasi-sdk.cmake \
-DCMAKE_BUILD_TYPE=Release -DUNIX=ON \
-DCMAKE_C_COMPILER_WORKS=ON -DCMAKE_CXX_COMPILER_WORKS=ON \
-DCMAKE_STAGING_PREFIX=/opt/wasi -DWASI_SDK_PREFIX=/opt/wasi"

var_append cmakeopt " " "-DLIBCXX_ABI_VERSION=2 \
-DLIBCXX_BUILD_EXTERNAL_THREAD_LIBRARY=OFF \
-DLIBCXX_CXX_ABI=libcxxabi \
-DLIBCXX_CXX_ABI_INCLUDE_PATHS=libcxxabi/include \
-DLIBCXX_ENABLE_EXCEPTIONS=OFF \
-DLIBCXX_ENABLE_EXPERIMENTAL_LIBRARY=OFF \
-DLIBCXX_ENABLE_FILESYSTEM=OFF \
-DLIBCXX_ENABLE_SHARED=OFF \
-DLIBCXX_ENABLE_THREADS=OFF \
-DLIBCXX_USE_COMPILER_RT=YES \
-DLIBCXX_HAS_EXTERNAL_THREAD_API=OFF \
-DLIBCXX_HAS_MUSL_LIBC=ON \
-DLIBCXX_HAS_PTHREAD_API=OFF \
-DLIBCXX_HAS_WIN32_THREAD_API=OFF \
-DLIBCXX_LIBDIR_SUFFIX=/wasm32-wasi \
-DLIBCXX_STANDALONE_BUILD=ON"

var_append cmakeopt " " "-DLIBCXXABI_BUILD_EXTERNAL_THREAD_LIBRARY=OFF \
-DLIBCXXABI_ENABLE_EXCEPTIONS=OFF \
-DLIBCXXABI_ENABLE_PIC=OFF \
-DLIBCXXABI_ENABLE_SHARED=OFF \
-DLIBCXXABI_ENABLE_THREADS=OFF \
-DLIBCXXABI_HAS_EXTERNAL_THREAD_API=OFF \
-DLIBCXXABI_HAS_PTHREAD_API=OFF \
-DLIBCXXABI_HAS_WIN32_THREAD_API=OFF \
-DLIBCXXABI_INCLUDE_TESTS=OFF \
-DLIBCXXABI_LIBCXX_INCLUDES=objdir/include/c++/v1 \
-DLIBCXXABI_LIBCXX_PATH=libcxx \
-DLIBCXXABI_LIBDIR_SUFFIX=/wasm32-wasi \
-DLIBCXXABI_SILENT_TERMINATE:BOOL=ON \
-DLIBCXXABI_STANDALONE_BUILD=ON"

build_libcxx() {
	eval cmake -B objdir -G Ninja $cmakeopt libcxx
	cmake --build objdir
	cmake --install objdir

	eval cmake -B objdir-abi -G Ninja $cmakeopt libcxxabi
	cmake --build objdir-abi
	cmake --install objdir-abi
}
hook_add inmake 5 build_libcxx
