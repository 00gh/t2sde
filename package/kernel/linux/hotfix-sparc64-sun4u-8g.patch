# --- T2-COPYRIGHT-NOTE-BEGIN ---
# T2 SDE: package/*/linux/hotfix-sparc64-sun4u-8g.patch
# Copyright (C) 2024 The T2 SDE Project
# 
# This Copyright note is generated by scripts/Create-CopyPatch,
# more information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License version 2 as used by the T2 SDE.
# --- T2-COPYRIGHT-NOTE-END ---

Unable to handle kernel NULL pointer dereference
tsk->{mm,active_mm}->context = 0000000000000000
tsk->{mm,active_mm}->pgd = fff00001ff002000
              \|/ ____ \|/
              "@'/ .. \`@"
              /_| \__/ |_\
                 \__U_/
swapper(0): Oops [#1]
CPU: 0 PID: 0 Comm: swapper Not tainted 6.10.11-t2 #45
TSTATE: 0000009980e01602 TPC: 0000000000c5ec98 TNPC: 0000000000c5ec9c Y: f9e69dcb    Not tainted
TPC: <subsection_map_init+0x50/0x98>
g0: 0000000010d7d038 g1: 0000000000000000 g2: 0000000000000000 g3: 0000000000000001
g4: 0000000000b95d80 g5: 0000000000000000 g6: 0000000000b84000 g7: 0000000000000000
o0: 0000000000000000 o1: ffffffffffffffff o2: 0000000000000000 o3: 0000000000ae1c40
o4: 0000000000b87ae8 o5: 0000000000000000 sp: 0000000000b871b1 ret_pc: 0000000000c5ec90
RPC: <subsection_map_init+0x48/0x98>
l0: 0000000000020000 l1: 0000000000020000 l2: 0000000000b0d730 l3: 0000000000000001
l4: 0000000000000000 l5: 0000000000000001 l6: 0000000001dfefbf l7: 00000001ff8f3110
i0: 0000000000000000 i1: 00000000000ff7ff i2: 0000000000000001 i3: 000000000001ffff
i4: 0000000000000000 i5: 0000000000000007 i6: 0000000000b87261 i7: 0000000000c5a4c8
I7: <free_area_init+0x58c/0xc78>
Call Trace:
[<0000000000c5a4c8>] free_area_init+0x58c/0xc78
[<0000000000c509c8>] paging_init+0xd1c/0xdd0
[<0000000000c4b848>] setup_arch+0x110/0x774
[<0000000000c48664>] start_kernel+0x58/0x778
[<0000000000c4b584>] start_early_boot+0x78/0x22c
[<00000000009b5264>] tlb_fixup_done+0x4c/0x54
[<00000000002f1a28>] 0x2f1a28
Disabling lock debugging due to kernel taint
Caller[0000000000c5a4c8]: free_area_init+0x58c/0xc78
Caller[0000000000c509c8]: paging_init+0xd1c/0xdd0
Caller[0000000000c4b848]: setup_arch+0x110/0x774
Caller[0000000000c48664]: start_kernel+0x58/0x778
Caller[0000000000c4b584]: start_early_boot+0x78/0x22c
Caller[00000000009b5264]: tlb_fixup_done+0x4c/0x54

--- linux-6.10/arch/sparc/kernel/ktlb.S	2024-07-15 00:43:32.000000000 +0200
+++ b/arch/sparc/kernel/ktlb.S	2024-09-24 20:18:35.373344860 +0200
@@ -144,7 +144,7 @@
 	brgez,pn	%g4, kvmap_dtlb_nonlinear
 	 nop
 
-#ifdef CONFIG_DEBUG_PAGEALLOC
+#if 1 /* def CONFIG_DEBUG_PAGEALLOC */
 	/* Index through the base page size TSB even for linear
 	 * mappings when using page allocation debugging.
 	 */
--- linux-6.10/arch/sparc/mm/init_64.c	2024-07-15 00:43:32.000000000 +0200
+++ b/arch/sparc/mm/init_64.c	2024-09-24 20:35:22.566682546 +0200
@@ -1891,11 +1891,22 @@
 static void __init kernel_physical_mapping_init(void)
 {
 	unsigned long i, mem_alloced = 0UL;
+	unsigned long phys_mem = 0UL;
 	bool use_huge = true;
 
 #ifdef CONFIG_DEBUG_PAGEALLOC
 	use_huge = false;
 #endif
+
+	if (tlb_type == cheetah_plus) {
+		for (i = 0; i < pall_ents; i++)
+			phys_mem += pall[i].reg_size;
+		printk("phys_mem: %ld\n", phys_mem);
+
+		if (phys_mem > 4294967296)
+			use_huge = false;
+	}
+
 	for (i = 0; i < pall_ents; i++) {
 		unsigned long phys_start, phys_end;
 
