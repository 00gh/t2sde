# --- T2-COPYRIGHT-BEGIN ---
# t2/package/*/freerdp/hotfix-cmake.patch.cross
# Copyright (C) 2025 The T2 SDE Project
# SPDX-License-Identifier: GPL-2.0 or patched project license
# --- T2-COPYRIGHT-END ---

--- FreeRDP-3.14.0/client/common/man/CMakeLists.txt.vanilla	2025-03-13 14:57:09.029077790 +0100
+++ FreeRDP-3.14.0/client/common/man/CMakeLists.txt	2025-03-13 14:57:50.563052878 +0100
@@ -1,22 +1,18 @@
-if(CMAKE_CROSSCOMPILING)
-  find_package(GenerateArgumentManpage)
-else()
-  include_directories(${CMAKE_BINARY_DIR}/include/)
+include_directories(${CMAKE_BINARY_DIR}/include/)
 
-  add_executable(generate_argument_manpage generate_argument_manpage.c ../cmdline.h)
+add_executable(generate_argument_manpage generate_argument_manpage.c ../cmdline.h)
 
-  include(CompilerDetect)
-  if(CMAKE_COMPILER_IS_CLANG OR CMAKE_COMPILER_IS_GNUCC)
-    target_compile_options(generate_argument_manpage PRIVATE -fno-sanitize=all)
-    target_compile_options(generate_argument_manpage PRIVATE -fno-sanitize=all)
+include(CompilerDetect)
+if(CMAKE_COMPILER_IS_CLANG OR CMAKE_COMPILER_IS_GNUCC)
+  target_compile_options(generate_argument_manpage PRIVATE -fno-sanitize=all)
+  target_compile_options(generate_argument_manpage PRIVATE -fno-sanitize=all)
 
-    target_link_options(generate_argument_manpage PRIVATE -fno-sanitize=all)
-    target_link_options(generate_argument_manpage PRIVATE -fno-sanitize=all)
-  endif()
-
-  export(TARGETS generate_argument_manpage FILE "${CMAKE_BINARY_DIR}/GenerateArgumentManpageConfig.cmake")
+  target_link_options(generate_argument_manpage PRIVATE -fno-sanitize=all)
+  target_link_options(generate_argument_manpage PRIVATE -fno-sanitize=all)
 endif()
 
+export(TARGETS generate_argument_manpage FILE "${CMAKE_BINARY_DIR}/GenerateArgumentManpageConfig.cmake")
+
 set(MAN_OPTIONS_FILE "${CMAKE_CURRENT_BINARY_DIR}/freerdp-global-options.1")
 set_property(DIRECTORY APPEND PROPERTY CMAKE_CONFIGURE_DEPENDS ${MAN_OPTIONS_FILE})

