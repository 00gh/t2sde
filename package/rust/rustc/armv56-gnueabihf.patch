# --- T2-COPYRIGHT-NOTE-BEGIN ---
# T2 SDE: package/*/rustc/armv56-gnueabihf.patch
# Copyright (C) 2022 The T2 SDE Project
# 
# This Copyright note is generated by scripts/Create-CopyPatch,
# more information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License version 2 as used by the T2 SDE.
# --- T2-COPYRIGHT-NOTE-END ---

--- rustc-1.65.0-src/compiler/rustc_target/src/spec/mod.rs.vanilla	2022-11-11 17:53:04.657154864 +0100
+++ rustc-1.65.0-src/compiler/rustc_target/src/spec/mod.rs	2022-11-11 17:54:10.784148492 +0100
@@ -940,8 +940,10 @@
     ("arm-unknown-linux-musleabihf", arm_unknown_linux_musleabihf),
     ("armv4t-unknown-linux-gnueabi", armv4t_unknown_linux_gnueabi),
     ("armv5te-unknown-linux-gnueabi", armv5te_unknown_linux_gnueabi),
+    ("armv5te-unknown-linux-gnueabihf", armv5te_unknown_linux_gnueabihf),
     ("armv5te-unknown-linux-musleabi", armv5te_unknown_linux_musleabi),
     ("armv5te-unknown-linux-uclibceabi", armv5te_unknown_linux_uclibceabi),
+    ("armv6-unknown-linux-gnueabihf", armv6_unknown_linux_gnueabihf),
     ("armv7-unknown-linux-gnueabi", armv7_unknown_linux_gnueabi),
     ("armv7-unknown-linux-gnueabihf", armv7_unknown_linux_gnueabihf),
     ("thumbv7neon-unknown-linux-gnueabihf", thumbv7neon_unknown_linux_gnueabihf),
--- /dev/null	2022-11-10 19:39:03.777867115 +0100
+++ rustc-1.65.0-src/compiler/rustc_target/src/spec/armv5te_unknown_linux_gnueabihf.rs	2022-11-11 17:43:17.795211410 +0100
@@ -0,0 +1,19 @@
+use crate::spec::{Target, TargetOptions};
+
+pub fn target() -> Target {
+    Target {
+        llvm_target: "armv5te-unknown-linux-gnueabihf".into(),
+        pointer_width: 32,
+        data_layout: "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64".into(),
+        arch: "arm".into(),
+        options: TargetOptions {
+            abi: "eabihf".into(),
+            features: "+vfpv2,+strict-align".into(),
+            // Atomic operations provided by compiler-builtins
+            max_atomic_width: Some(32),
+            mcount: "\u{1}__gnu_mcount_nc".into(),
+            has_thumb_interworking: true,
+            ..super::linux_gnu_base::opts()
+        },
+    }
+}
--- /dev/null	2022-11-10 19:39:03.777867115 +0100
+++ rustc-1.65.0-src/compiler/rustc_target/src/spec/armv6_unknown_linux_gnueabihf.rs	2022-11-11 17:43:17.795211410 +0100
@@ -0,0 +1,19 @@
+use crate::spec::{Target, TargetOptions};
+
+pub fn target() -> Target {
+    Target {
+        llvm_target: "armv6-unknown-linux-gnueabihf".into(),
+        pointer_width: 32,
+        data_layout: "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64".into(),
+        arch: "arm".into(),
+        options: TargetOptions {
+            abi: "eabihf".into(),
+            features: "+vfpv2,+strict-align".into(),
+            // Atomic operations provided by compiler-builtins
+            max_atomic_width: Some(32),
+            mcount: "\u{1}__gnu_mcount_nc".into(),
+            has_thumb_interworking: true,
+            ..super::linux_gnu_base::opts()
+        },
+    }
+}
