# --- T2-COPYRIGHT-NOTE-BEGIN ---
# T2 SDE: package/*/rustc/sparc32.patch
# Copyright (C) 2023 - 2024 The T2 SDE Project
# 
# This Copyright note is generated by scripts/Create-CopyPatch,
# more information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License version 2 as used by the T2 SDE.
# --- T2-COPYRIGHT-NOTE-END ---

--- rustc-1.81.0-src/compiler/rustc_target/src/spec/targets/sparcv9b_unknown_linux_gnu.rs.vanilla	2024-09-25 16:24:05.474000000 +0100
+++ rustc-1.81.0-src/compiler/rustc_target/src/spec/targets/sparcv9b_unknown_linux_gnu.rs	2024-09-25 16:27:12.310000000 +0100
@@ -3,7 +3,7 @@
 
 pub fn target() -> Target {
     Target {
-        llvm_target: "sparc-unknown-linux-gnu".into(),
+        llvm_target: "sparc-unknown-linux-gnu".into(), // v9b
         metadata: crate::spec::TargetMetadata {
             description: Some("32-bit SPARC Linux".into()),
             tier: Some(3),
@@ -14,7 +14,7 @@
         data_layout: "E-m:e-p:32:32-i64:64-f128:64-n32-S64".into(),
         arch: "sparc".into(),
         options: TargetOptions {
-            cpu: "v8".into(),
+            cpu: "v9".into(), // v9b?
             endian: Endian::Big,
             //late_link_args: TargetOptions::link_args( LinkerFlavor::Gnu(Cc::Yes, Lld::No), &["-mcpu=v9", "-m32"],),
             max_atomic_width: Some(32),
--- rustc-1.81.0-src/compiler/rustc_target/src/spec/targets/sparcv9_unknown_linux_gnu.rs.vanilla	2024-09-25 16:24:05.474000000 +0100
+++ rustc-1.81.0-src/compiler/rustc_target/src/spec/targets/sparcv9_unknown_linux_gnu.rs	2024-09-25 16:26:40.302000000 +0100
@@ -3,7 +3,7 @@
 
 pub fn target() -> Target {
     Target {
-        llvm_target: "sparc-unknown-linux-gnu".into(),
+        llvm_target: "sparc-unknown-linux-gnu".into(), // v9
         metadata: crate::spec::TargetMetadata {
             description: Some("32-bit SPARC Linux".into()),
             tier: Some(3),
@@ -14,7 +14,7 @@
         data_layout: "E-m:e-p:32:32-i64:64-f128:64-n32-S64".into(),
         arch: "sparc".into(),
         options: TargetOptions {
-            cpu: "v8".into(),
+            cpu: "v9".into(),
             endian: Endian::Big,
             //late_link_args: TargetOptions::link_args( LinkerFlavor::Gnu(Cc::Yes, Lld::No), &["-mcpu=v9", "-m32"],),
             max_atomic_width: Some(32),
