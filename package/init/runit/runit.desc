[COPY] --- T2-COPYRIGHT-BEGIN ---
[COPY] t2/package/*/runit/runit.desc
[COPY] Copyright (C) 2004 - 2025 The T2 SDE Project
[COPY] Copyright (C) 1998 - 2003 ROCK Linux Project
[COPY] SPDX-License-Identifier: GPL-2.0
[COPY] --- T2-COPYRIGHT-END ---

[I] An UNIX init scheme with service supervision

[T] runit is a daemontools alike replacement for SysV-init and other init
[T] schemes. It currently runs on GNU/Linux, OpenBSD, FreeBSD, and can easily
[T] be adapted to other Unix operating systems. runit implements a simple
[T] three-stage concept. Stage 1 performs the system's one-time initialization
[T] tasks. Stage 2 starts the system's uptime services (via the runsvdir
[T] program). Stage 3 handles the tasks necessary to shutdown and halt or
[T] reboot.

[U] https://smarden.org/runit/index.html

[A] Gerrit Pape <pape@smarden.org>
[M] The T2 Project <t2@t2-project.org>

[C] base/system
[F] CROSS INIT

[L] OpenSource
[S] Stable
[V] 2.2.0
[P] O --2--5---9 110.700

[CV-URL] http://smarden.org/runit/install.html

[D] f5ae58339000e5b2f8b6d41102839f18486528a08db35dec73ec442d runit-2.2.0.tar.gz http://smarden.org/runit/

[ "$prefix" = usr ] && sbindir="sbin"

. $base/package/*/runit/djb-config admin $root$sbindir

hook_add postmake 6 'pkg_runit_addservices'
if ! pkginstalled daemontools; then
hook_add postmake 7 ' \
	[ "$pkg_djb_commanddir" != "$root$sbindir" ] && add_flist ${pkg_djb_commanddir#$root}; \
	[ "$pkg_djb_servicedir" ] && add_flist $pkg_djb_servicedir; \
	[ "$pkg_djb_packagedir" ] && add_flist $pkg_djb_packagedir; \
	true'
fi

pkg_runit_addservices() {
	local agettyargs speed

	# main scripts and virtual consoles
	# only if it is INIT
if [ "$SDECFG_INIT" == "runit" ]; then
	#if [ ! -f $root$sysconfdir/1 ]; then
		echo "Creating main scripts and virtual consoles..."

		mkdir -p $root$sysconfdir
		cp -vf ./doc/debian/[123] $root$sysconfdir/
		cp -vf ./doc/debian/ctrlaltdel $root$sysconfdir/
		chmod 744 $root$sysconfdir/[123]
		chmod 744 $root$sysconfdir/ctrlaltdel
		mkdir -p $root$sysconfdir/{1,3}.d

		for i in console 1 2 3 4 5 6; do
			if [ "$i" == "console" ]; then
				echo "Creating getty $i..."
				speed=9600
			else
				echo "Creating getty tty$i..."
				i="vc/$i"
				speed=38400
			fi
			mkdir -p $root$sysconfdir/getty-${i#vc/}
			if [ "$i" == "console" -o "$i" == "vc/1" ]; then
				agettyargs='-L -i -I '"'"'\012\015\012Maintenance Console:\012'"'"
			else
				agettyargs='-f /etc/issue.ansi'
			fi
			cat << EOT > $root$sysconfdir/getty-${i#vc/}/run
#!/bin/sh
exec /sbin/agetty $agettyargs $speed $i linux
EOT
			cat << EOT > $root$sysconfdir/getty-${i#vc/}/finish
#!/bin/sh
exec ${pkg_djb_commanddir#$root}/utmpset -w $i
EOT
			chmod 755 $root$sysconfdir/getty-${i#vc/}/{run,finish}
		done
	#fi

	# getties to svscan
	echo "Make getties available to svscan..."
	for i in 1 2 3 4 5 6; do
		ln -snfv $sysconfdir/getty-$i $pkg_djb_servicedir/
	done

	# HACK, runit need it's own system initializer
	install_init system $confdir/../sysvinit/system.init

	ln -snfv /sbin/init.d/system "$root$sysconfdir/1.d/10system"
	ln -snfv /sbin/init.d/system "$root$sysconfdir/3.d/90system"

	# init at /sbin
	if [ "$SDECFG_INIT" == "runit" ]; then
		echo "Copying init files to /sbin..."
		cp -vf ./command/runit $root$sbindir/runit
		cp -vf ./command/runit-init $root$sbindir/init
	fi

fi

	ln -sfv forced_reboot $pkg_djb_commanddir/forced_poweroff

	# Emulate daemontools if not present using chpst
	if ! pkginstalled daemontools; then
		echo "Emulate functionality of daemontools with chpst."
		for x in softlimit envdir envuidgid pgrphack setlock setuidgid;
		do
			ln -sfv chpst $pkg_djb_commanddir/$x
		done
	fi
	}

if [ "$SDECFG_PKG_DJB_LAYOUT" == "1" ]; then
	hook_add premake 5 "for x in ./doc/debian/*; do \
	if [ -f \$x ]; then	\
		echo Fixing \$x...;	\
		sed -i -e 's,/var/service,/service,g' \$x; \
	fi	; \
	done"

	runit_profile_d() {
		cat <<-EOP > $root/etc/profile.d/runit
	export PATH=/command:\$PATH
	EOP
	}
	hook_add postmake 5 'runit_profile_d'
else
	hook_add premake 5 "for x in ./doc/debian/*; do \
	if [ -f \$x ]; then	\
		echo Fixing \$x...;	\
		sed -i -e 's,/command:,,g' \$x;	\
	fi	; \
	done"
	hook_add postinstall 8 'sed -i -e "s,/service,/var/service,g" \
		$root/lib/network/runit.sh'
fi
