# --- T2-COPYRIGHT-NOTE-BEGIN ---
# T2 SDE: package/*/go/go.conf
# Copyright (C) 2021 - 2023 The T2 SDE Project
# 
# This Copyright note is generated by scripts/Create-CopyPatch,
# more information can be found in the files COPYING and README.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2.
# --- T2-COPYRIGHT-NOTE-END ---

autoextract=0
makeopt=
makeinstopt=

hook_add inmake 5 "go_inmake"
hook_add postmake 5 "go_postmake"
var_remove GCC_WRAPPER_REMOVE ' ' "-gdwarf*"

# Translate our arch naming to theirs
go_arch() {
	local LE BE P32
	case $arch_bigendian in
		yes)	BE=be LE='' ;;
		no)	BE='' LE=le ;;
	esac

	[ "$arch_sizeof_char_p" = 4 ] && P32=p32
	
	case $arch in
		arm*)	echo $arch$BE ;;
		loongarch*)	echo ${arch/arch} ;;
		mips)	echo $arch$LE ;;
		mips*)	echo $arch$P32$LE ;;
		powerpc64)	echo ppc64$LE ;;
		x86)	echo 386 ;;
		x86-64) echo amd64$P32 ;;
		*)	echo $arch ;;
	esac
}

export CGO_ENABLED=0
export GOOS=$SDECFG_KERNEL
export GOARCH=$(go_arch)
export GOROOT_FINAL=$root$libdir/go

# Build every go versions until latest
go_inmake() {
	# Only bootstrap from C if host hasn't a Go compiler
	[ -e /usr/bin/go ] &&
		go_tarballs=$(match_source_file -p $ver | sort -V) ||
		go_tarballs=$(match_source_file -p | sort -V)

	for x in $go_tarballs; do
		# Don't build in /var/tmp
		export TMPDIR="$(mktemp -d -p $PWD)"
		cd $TMPDIR

		tar $taropt $x

		cd go
		apply_patchfiles
		cd src

		# Go uses uname all over the place to determine host arch
		sed -i 's,uname,/bin/uname,g' *.bash

		gover="$(echo ${x/*-/} | sed 's/.tar.*//')"
		[ "$gover" != "1.4" ] && sed -i '96s,uname,/bin/uname,g' ./cmd/dist/main.go

		./make.bash

		# Use what we just built as the toolchain for the next loop round
		export GOROOT_BOOTSTRAP="$TMPDIR/go"

		cd ../..
	done
}

go_postmake() {
	# Always delete previous Go installs to avoid conflicts
	rm -rf $GOROOT_FINAL/

	mkdir -pv $GOROOT_FINAL
	cp -rfv go/* $GOROOT_FINAL/

	# Move the cross-compiled binary in the right place as go puts it in a subdirectory
	if atstage cross; then
		find "$GOROOT_FINAL/bin/${GOOS}_$GOARCH" -type f -perm /u+x | xargs -I {} mv -v {} $GOROOT_FINAL/bin/
		rm -rfv "$GOROOT_FINAL/bin/${GOOS}_$GOARCH"
	fi

	# Symlink the binaries to the bindir
	for bin in $GOROOT_FINAL/bin/* ; do
		ln -srfv $bin $root/$bindir/${bin##*/}
	done
}
