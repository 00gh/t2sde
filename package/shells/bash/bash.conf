# --- T2-COPYRIGHT-BEGIN ---
# t2/package/*/bash/bash.conf
# Copyright (C) 2004 - 2025 The T2 SDE Project
# Copyright (C) 1998 - 2003 ROCK Linux Project
# SPDX-License-Identifier: GPL-2.0
# --- T2-COPYRIGHT-END ---

bash_which=1

var_append CC_WRAPPER_APPEND ' ' -std=gnu17
var_append SYSCC_WRAPPER_APPEND ' ' -std=gnu17

# mkbuiltins.o:(.text+0x9e8): undefined reference to `x__nldbl_sprintf'
atstage native || var_append makeopt ' ' CFLAGS_FOR_BUILD=

if ! atstage native; then
	var_append confopt ' ' '--without-emacs' # tries to run it anyway, so:
	export EMACS=false
fi

pkg_bash_postmake() {
	if [ "$bash_which" = "1" ]; then
		echo "Creating 'usr/bin/which' and 'bin/sh' ..."
		echo -e '#!/bin/bash\ntype -p "$@"' > $root/usr/bin/which
		chmod +x $root/usr/bin/which
	fi

	mkdir -pv $root$datadir/bash-completion/completions

	[ -f $root/usr/bin/bash ] && mv -v $root/usr/bin/bash $root/bin/bash
	pkginstalled mksh || ln -sfv bash $root/bin/sh
}
hook_add postmake 5 "pkg_bash_postmake"

pkg_bash_preconf() {
	for x in `match_source_file -p 'bash..-...'`; do
		echo "Applying patch ${x##*/} ..."
		patch -p0 < $x
	done
}
hook_add preconf 5 "pkg_bash_preconf"

atstage native || var_append confopt ' ' --without-lispdir
atstage native || hook_add preconf 5 "echo 'bash_cv_job_control_missing=present' >> config.cache"
var_append confopt ' ' --without-bash-malloc

[ "$SDECFG_PKG_BASH_PROGCOMP" = 0 ] &&
	var_append confopt ' ' --disable-progcomp
[ "$SDECFG_PKG_BASH_HELP_CMD" = 0 ] &&
	var_append confopt ' ' --disable-help-builtin

hook_add premake 5 "eval $MAKE $makeopt builtins/builtext.h" # parallel make
