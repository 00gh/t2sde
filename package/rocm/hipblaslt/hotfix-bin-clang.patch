# --- T2-COPYRIGHT-BEGIN ---
# t2/package/*/hipblaslt/hotfix-bin-clang.patch
# Copyright (C) 2025 The T2 SDE Project
# SPDX-License-Identifier: GPL-2.0 or patched project license
# --- T2-COPYRIGHT-END ---

--- hipBLASLt-rocm-6.3.3/tensilelite/Tensile/Ops/AMaxGenerator.py.vanilla	2025-03-28 23:23:15.402696286 +0100
+++ hipBLASLt-rocm-6.3.3/tensilelite/Tensile/Ops/AMaxGenerator.py	2025-03-28 23:23:22.404294977 +0100
@@ -821,7 +821,7 @@
     ap.add_argument('-s', type=str, default="F8", help='scale data type')
     ap.add_argument('-w', type=int, default=256, help='workitem')
     ap.add_argument('-c', type=int, default=4, help='load conut per iteration')
-    ap.add_argument('--toolchain', type=str, default='/opt/rocm/llvm/bin/clang++', help='Path to ROCm compiler')
+    ap.add_argument('--toolchain', type=str, default='/opt/rocm/bin/clang++', help='Path to ROCm compiler')
     ap.add_argument('--debug-build', action='store_true', dest='debug_build', help='Build with debug information')
     ap.add_argument('--is-scale', action='store_true', dest='is_scale', help='Enable scaled output or not')
     ap.add_argument('--arch', type=str, default='gfx90a', help='Target architecture for assembler, e.g. gfx908. Default is gfx90a')
--- hipBLASLt-rocm-6.3.3/tensilelite/Tensile/Ops/LayerNormGenerator.py.vanilla	2025-03-28 23:23:15.405713707 +0100
+++ hipBLASLt-rocm-6.3.3/tensilelite/Tensile/Ops/LayerNormGenerator.py	2025-03-28 23:23:22.404530362 +0100
@@ -907,7 +907,7 @@
     ap.add_argument('-w', type=int, default=256, help='workitem')
     ap.add_argument('-c', type=int, default=4, help='load conut per iteration')
     ap.add_argument('--sweep-once', type=int, default=0, dest='sweep_once', help='sweep once')
-    ap.add_argument('--toolchain', type=str, default='/opt/rocm/llvm/bin/clang++', help='Path to ROCm compiler')
+    ap.add_argument('--toolchain', type=str, default='/opt/rocm/bin/clang++', help='Path to ROCm compiler')
     ap.add_argument('--debug-build', action='store_true', dest='debug_build', help='Build with debug information')
     ap.set_defaults(debug_build=False)
     ap.add_argument('--arch', type=str, default='gfx90a', help='Target architecture for assembler, e.g. gfx908. Default is gfx90a')
--- hipBLASLt-rocm-6.3.3/tensilelite/Tensile/Ops/SoftmaxGenerator.py.vanilla	2025-03-28 23:23:15.408655427 +0100
+++ hipBLASLt-rocm-6.3.3/tensilelite/Tensile/Ops/SoftmaxGenerator.py	2025-03-28 23:23:22.404771008 +0100
@@ -675,7 +675,7 @@
     ap.add_argument('-o', '--output', type=str, required=True, help='Output path of compiled binary')
     ap.add_argument('-m', type=int, default=16, help='Dimension 0 of tile')
     ap.add_argument('-n', type=int, default=16, help='Dimension 1 of tile')
-    ap.add_argument('--toolchain', type=str, default='/opt/rocm/llvm/bin/clang++', help='Path to ROCm compiler')
+    ap.add_argument('--toolchain', type=str, default='/opt/rocm/bin/clang++', help='Path to ROCm compiler')
     ap.add_argument('--debug-build', action='store_true', dest='debug_build', help='Build with debug information')
     ap.set_defaults(debug_build=False)
     ap.add_argument('--arch', type=str, default='gfx90a', help='Target architecture for assembler, e.g. gfx908. Default is gfx90a')
--- hipBLASLt-rocm-6.3.3/tensilelite/Tensile/Common.py.vanilla	2025-03-28 23:23:15.399733367 +0100
+++ hipBLASLt-rocm-6.3.3/tensilelite/Tensile/Common.py	2025-03-28 23:23:22.403679833 +0100
@@ -229,7 +229,7 @@
 globalParameters["CurrentISA"] = (0,0,0)
 globalParameters["ROCmAgentEnumeratorPath"] = None      # /opt/rocm/bin/rocm_agent_enumerator
 globalParameters["ROCmSMIPath"] = None                  # /opt/rocm/bin/rocm-smi
-globalParameters["AssemblerPath"] = None                # /opt/rocm/llvm/bin/clang++
+globalParameters["AssemblerPath"] = None                # /opt/rocm/bin/clang++
 globalParameters["WorkingPath"] = os.getcwd()           # path where tensile called from
 globalParameters["IndexChars"] =  "IJKLMNOPQRSTUVWXYZ"  # which characters to use for C[ij]=Sum[k] A[ik]*B[jk]
 globalParameters["ScriptPath"] = os.path.dirname(os.path.realpath(__file__))            # path to Tensile/Tensile.py
