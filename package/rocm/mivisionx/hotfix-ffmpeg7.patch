# --- T2-COPYRIGHT-BEGIN ---
# t2/package/*/mivisionx/hotfix-ffmpeg7.patch
# Copyright (C) 2025 The T2 SDE Project
# SPDX-License-Identifier: GPL-2.0 or patched project license
# --- T2-COPYRIGHT-END ---

--- MIVisionX-rocm-6.3.3/amd_openvx_extensions/amd_media/decoder.cpp.vanilla	2025-03-28 19:30:13.650236874 +0100
+++ MIVisionX-rocm-6.3.3/amd_openvx_extensions/amd_media/decoder.cpp	2025-03-28 19:31:26.605264713 +0100
@@ -490,7 +490,7 @@
             return status;
         }        
         // find the video stream information
-        err = av_find_best_stream(formatContext, AVMEDIA_TYPE_VIDEO, -1, -1, &decoder, 0);
+        err = -1; //av_find_best_stream(formatContext, AVMEDIA_TYPE_VIDEO, -1, -1, &decoder, 0);
         if (err < 0) {
             vxAddLogEntry((vx_reference)node, VX_ERROR_INVALID_VALUE, "ERROR: no video found in %s", mediaFileName);
             return VX_ERROR_INVALID_VALUE;
@@ -500,7 +500,7 @@
         if (!useVaapi[mediaIndex]) {
             unsigned int streamIndex = -1;
             for (unsigned int si = 0; si < formatContext->nb_streams; si++) {
-                AVCodecContext * vcc = formatContext->streams[si]->codec;
+                AVCodecContext * vcc = NULL; //formatContext->streams[si]->codec;
                 if (vcc->codec_type == AVMEDIA_TYPE_VIDEO) {
                     // pick video stream index with larger dimensions
                     if (!codecContext) {
--- MIVisionX-rocm-6.3.3/amd_openvx_extensions/amd_media/kernels.cpp.vanilla	2025-03-28 19:32:07.587220906 +0100
+++ MIVisionX-rocm-6.3.3/amd_openvx_extensions/amd_media/kernels.cpp	2025-03-28 19:32:13.557271352 +0100
@@ -95,7 +95,7 @@
     initialized = true;
     av_log_set_callback(av_log_callback);
     av_log_set_level(AV_LOG_ERROR);
-    av_register_all();
+    //av_register_all();
   }
   return VX_SUCCESS;
 }
